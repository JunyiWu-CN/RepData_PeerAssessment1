ggplot(uspopage, aes(x = Year, y = Thousands, fill = AgeGroup)) +
geom_area()
library(gcookbook) # Load gcookbook for the uspopage data set
ggplot(uspopage, aes(x = Year, y = Thousands, fill = AgeGroup))
library(gcookbook) # Load gcookbook for the uspopage data set
ggplot(uspopage, aes(x = Year, y = Thousands, fill = AgeGroup))
library(gcookbook) # Load gcookbook for the uspopage data set
ggplot(uspopage, aes(x = Year, y = Thousands, fill = AgeGroup)) + geom_line()
library(gcookbook) # Load gcookbook for the uspopage data set
ggplot(uspopage, aes(x = Year, y = Thousands, fill = AgeGroup)) + geom_area()
# Create Data
Prop <- c(3,7,9,1,2)
# Make the default Pie Plot
pie(Prop)
pie(1, 2)
pie(c(1, 2 ))
pie(c(1, 2))
pie(c(1, 2, 3))
pie(c(1, 2, 3, ))
pie(c(1, 2, 3, 4))
pie(c(1, 2))
#####DO NOT MODIFY THIS CHUNK
library(tidyverse)
set.seed(12345)
var1<-runif(50,0,10)
set.seed(12345)
var2<-var1+rnorm(50,5,2)
set.seed(12345)
var3<- var1*(-rnorm(50,1,.2))
dat1<-tibble(var1,var2,var3)
dat1
dim(dat)
dat1
dim(dat1)
x
var``
var1
qplot(var1, var2)
qplot(v = var1, vv = var2)
qplot('sad' = var1, 'dd' = var2)
qplot(z = var1, y = var2)
qplot(x = var1, y = var2)
qplot(z = var1, y = var2)
qplot(x = var1, y = var2)
qplot(var1, var2)
qplot(var1, var2, xlab = 'dqwd')
####Make sure you install any necessary libraries
qplot(var1, var2, xlab = 'Variable1', ylab = 'Variable2')
####PUT YOUR CODE HERE
####Make sure you install any necessary libraries
qplot(var1, var2, xlab = 'Variable1', ylab = 'Variable2') + stat_smooth(method = lm)
####PUT YOUR CODE HERE
####Make sure you install any necessary libraries
qplot(var1, var2, xlab = 'Variable1', ylab = 'Variable2') + stat_smooth()
####PUT YOUR CODE HERE
####Make sure you install any necessary libraries
qplot(var1, var2, xlab = 'Variable1', ylab = 'Variable2', smooth = "loess") + stat_smooth()
####PUT YOUR CODE HERE
####Make sure you install any necessary libraries
qplot(var1, var2, xlab = 'Variable1', ylab = 'Variable2') + stat_smooth()
####PUT YOUR CODE HERE
data <- read.csv("activity.csv")
setwd("~/Desktop/coursera/reproducible research/RepData_PeerAssessment1")
data <- read.csv("activity.csv")
steps_per_day <- aggregate(steps ~ date, data, sum)
hist(steps_per_day[, "steps"], xlab = "Steps", main = "Histogram of Steps per Day")
mean(steps_per_day[, "steps"])
median(steps_per_day[, "steps"])
steps_avg_interval <- aggregate(steps ~ interval, data, mean)
plot(steps_avg_interval[, "interval"], steps_avg_interval[, "steps"],
type = "l",
main = "average daily activity pattern",
xlab = "Interval",
ylab = "Steps")
idx <- which.max(steps_avg_interval[, "steps"])
steps_avg_interval[idx, "interval"]
sum(is.na(data))
data
names(data)
sum(is.na(data))
data_sep <- aggregate(steps ~ (interval + date), data, mean, na.rm = T)
data_impute <- merge(data, data_sep, by = c("interval", "date"))
data_impute <- transform(data_impute,
steps.x = ifelse(is.na(steps.x),
steps.y, steps.x))
data_impute <- data.frame(data_impute[, 1 : 4])
names(data_impute) <- c("interval", "day", "steps", "date")
data_impute$steps <- round(data_impute$steps, digits = 0)
data_impute <- data_impute[order(data_impute$date,
data_impute$interval), ]
data_impute
names(data_impute)
sum(is.na(data))
data_sep <- aggregate(steps ~ (interval + date), data, mean, na.rm = T)
data_impute <- merge(data, data_sep, by = c("interval", "date"))
data_impute <- transform(data_impute,
steps.x = ifelse(is.na(steps.x),
steps.y, steps.x))
data_impute <- data.frame(data_impute[, 1 : 4])
names(data_impute) <- c("interval", "day", "steps", "date")
data_impute$steps <- round(data_impute$steps, digits = 0)
data_impute <- data_impute[order(data_impute$date,
data_impute$interval), ]
impute_steps_per_day <- aggregate(steps ~ date, data_impute, sum)
hist(impute_steps_per_day[, "steps"], xlab = "Steps", main = "Histogram of Steps per Day")
mean(impute_steps_per_day[, "steps"])
median(impute_steps_per_day[, "steps"])
activityImputeAgg <- aggregate(steps ~ date, data_impute, sum, na.rm = TRUE)
qplot(steps, data = activityImputeAgg, binwidth = 1400) +
theme_bw()
library(ggplot2)
activityImputeAgg <- aggregate(steps ~ date, data_impute, sum, na.rm = TRUE)
qplot(steps, data = activityImputeAgg, binwidth = 1400) +
theme_bw()
intdayAve <- aggregate(steps ~ interval + day, activity, mean, na.rm = TRUE)
activityImpute <- merge(activity, intdayAve, by=c("interval", "day"))
activityImpute <- transform(activityImpute, steps.x = ifelse(is.na(steps.x),steps.y,steps.x))
activityImpute <- data.frame(activityImpute[,1:4])
names(activityImpute) <- c("interval", "day","steps", "date")
activityImpute$steps <- round(activityImpute$steps, digits = 0)
activityImpute <- activityImpute[order(activityImpute$date, activityImpute$interval),]
activityImputeAgg <- aggregate(steps ~ date, data_impute, sum, na.rm = TRUE)
qplot(steps, data = activityImputeAgg, binwidth = 1400) +
theme_bw()
intdayAve <- aggregate(steps ~ interval + day, activity, mean, na.rm = TRUE)
activityImpute <- merge(activity, intdayAve, by=c("interval", "day"))
activityImpute <- transform(activityImpute, steps.x = ifelse(is.na(steps.x),steps.y,steps.x))
activityImpute <- data.frame(activityImpute[,1:4])
names(activityImpute) <- c("interval", "day","steps", "date")
activityImpute$steps <- round(activityImpute$steps, digits = 0)
activityImpute <- activityImpute[order(activityImpute$date, activityImpute$interval),]
activityImputeAgg <- aggregate(steps ~ date, data_impute, sum, na.rm = TRUE)
qplot(steps, data = activityImputeAgg, binwidth = 1400) +
theme_bw()
activity = data
intdayAve <- aggregate(steps ~ interval + day, activity, mean, na.rm = TRUE)
activityImpute <- merge(activity, intdayAve, by=c("interval", "day"))
activityImpute <- transform(activityImpute, steps.x = ifelse(is.na(steps.x),steps.y,steps.x))
activityImpute <- data.frame(activityImpute[,1:4])
names(activityImpute) <- c("interval", "day","steps", "date")
activityImpute$steps <- round(activityImpute$steps, digits = 0)
activityImpute <- activityImpute[order(activityImpute$date, activityImpute$interval),]
activityImputeAgg <- aggregate(steps ~ date, data_impute, sum, na.rm = TRUE)
qplot(steps, data = activityImputeAgg, binwidth = 1400) +
theme_bw()
sum(is.na(data))
data_sep <- aggregate(steps ~ (interval + date), data, mean, na.rm = T)
data_impute <- merge(data, data_sep, by = c("interval", "date"))
data_impute <- transform(data_impute,
steps.x = ifelse(is.na(steps.x),
steps.y, steps.x))
data_impute <- data.frame(data_impute[, 1 : 4])
names(data_impute) <- c("interval", "day", "steps", "date")
data_impute$steps <- round(data_impute$steps, digits = 0)
data_impute <- data_impute[order(data_impute$date,
data_impute$interval), ]
impute_steps_per_day <- aggregate(steps ~ date, data_impute, sum)
hist(impute_steps_per_day[, "steps"], xlab = "Steps", main = "Histogram of Steps per Day")
mean(impute_steps_per_day[, "steps"])
median(impute_steps_per_day[, "steps"])
data <- read.csv("activity.csv")
steps_per_day <- aggregate(steps ~ date, data, sum)
hist(steps_per_day[, "steps"], xlab = "Steps", main = "Histogram of Steps per Day")
mean(steps_per_day[, "steps"])
median(steps_per_day[, "steps"])
steps_avg_interval <- aggregate(steps ~ interval, data, mean)
plot(steps_avg_interval[, "interval"], steps_avg_interval[, "steps"],
type = "l",
main = "average daily activity pattern",
xlab = "Interval",
ylab = "Steps")
idx <- which.max(steps_avg_interval[, "steps"])
steps_avg_interval[idx, "interval"]
sum(is.na(data))
data_sep <- aggregate(steps ~ (interval + date), data, mean, na.rm = T)
data_impute <- merge(data, data_sep, by = c("interval", "date"))
data_impute <- transform(data_impute,
steps.x = ifelse(is.na(steps.x),
steps.y, steps.x))
data_impute <- data.frame(data_impute[, 1 : 4])
names(data_impute) <- c("interval", "day", "steps", "date")
data_impute$steps <- round(data_impute$steps, digits = 0)
data_impute <- data_impute[order(data_impute$date,
data_impute$interval), ]
impute_steps_per_day <- aggregate(steps ~ date, data_impute, sum)
hist(impute_steps_per_day[, "steps"], xlab = "Steps", main = "Histogram of Steps per Day")
mean(impute_steps_per_day[, "steps"])
median(impute_steps_per_day[, "steps"])
sum(is.na(data))
data_sep <- aggregate(steps ~ (interval + date), data, mean, na.rm = T)
data_impute <- merge(data, data_sep, by = c("interval", "date"))
data_impute <- transform(data_impute,
steps.x = ifelse(is.na(steps.x),
steps.y, steps.x))
data_impute <- data.frame(data_impute[, 1 : 4])
names(data_impute) <- c("interval", "day", "steps", "date")
data_impute$steps <- round(data_impute$steps, digits = 0)
data_impute <- data_impute[order(data_impute$date,
data_impute$interval), ]
impute_steps_per_day <- aggregate(steps ~ date, data_impute,
sum, na.rm = T)
hist(impute_steps_per_day[, "steps"], xlab = "Steps", main = "Histogram of Steps per Day")
mean(impute_steps_per_day[, "steps"])
median(impute_steps_per_day[, "steps"])
sum(is.na(data))
data_sep <- aggregate(steps ~ (interval + day), data, mean, na.rm = T)
data_impute <- merge(data, data_sep, by = c("interval", "date"))
data_impute <- transform(data_impute,
steps.x = ifelse(is.na(steps.x),
steps.y, steps.x))
data_impute <- data.frame(data_impute[, 1 : 4])
names(data_impute) <- c("interval", "day", "steps", "date")
data_impute$steps <- round(data_impute$steps, digits = 0)
data_impute <- data_impute[order(data_impute$date,
data_impute$interval), ]
impute_steps_per_day <- aggregate(steps ~ date, data_impute,
sum, na.rm = T)
hist(impute_steps_per_day[, "steps"], xlab = "Steps", main = "Histogram of Steps per Day")
mean(impute_steps_per_day[, "steps"])
median(impute_steps_per_day[, "steps"])
sum(is.na(data))
data_sep <- aggregate(steps ~ (interval + day), data, mean, na.rm = T)
data_impute <- merge(data, data_sep, by = c("interval", "date"))
data_impute <- transform(data_impute,
steps.x = ifelse(is.na(steps.x),
steps.y, steps.x))
data_impute <- data.frame(data_impute[, 1 : 4])
names(data_impute) <- c("interval", "day", "steps", "date")
data_impute$steps <- round(data_impute$steps, digits = 0)
data_impute <- data_impute[order(data_impute$date,
data_impute$interval), ]
impute_steps_per_day <- aggregate(steps ~ date, data_impute,
sum, na.rm = T)
hist(impute_steps_per_day[, "steps"], xlab = "Steps", main = "Histogram of Steps per Day")
mean(impute_steps_per_day[, "steps"])
median(impute_steps_per_day[, "steps"])
data <- read.csv("activity.csv")
steps_per_day <- aggregate(steps ~ date, data, sum)
hist(steps_per_day[, "steps"], xlab = "Steps", main = "Histogram of Steps per Day")
mean(steps_per_day[, "steps"])
median(steps_per_day[, "steps"])
steps_avg_interval <- aggregate(steps ~ interval, data, mean)
plot(steps_avg_interval[, "interval"], steps_avg_interval[, "steps"],
type = "l",
main = "average daily activity pattern",
xlab = "Interval",
ylab = "Steps")
idx <- which.max(steps_avg_interval[, "steps"])
steps_avg_interval[idx, "interval"]
sum(is.na(data))
data_sep <- aggregate(steps ~ (interval + day), data, mean, na.rm = T)
data_impute <- merge(data, data_sep, by = c("interval", "date"))
data_impute <- transform(data_impute,
steps.x = ifelse(is.na(steps.x),
steps.y, steps.x))
data_impute <- data.frame(data_impute[, 1 : 4])
names(data_impute) <- c("interval", "day", "steps", "date")
data_impute$steps <- round(data_impute$steps, digits = 0)
data_impute <- data_impute[order(data_impute$date,
data_impute$interval), ]
impute_steps_per_day <- aggregate(steps ~ date, data_impute,
sum, na.rm = T)
hist(impute_steps_per_day[, "steps"], xlab = "Steps", main = "Histogram of Steps per Day")
mean(impute_steps_per_day[, "steps"])
median(impute_steps_per_day[, "steps"])
sum(is.na(data))
data_sep <- aggregate(steps ~ (interval + day), data, mean, na.rm = T)
data_impute <- merge(data, data_sep, by = c("interval", "day"))
data_impute <- transform(data_impute,
steps.x = ifelse(is.na(steps.x),
steps.y, steps.x))
data_impute <- data.frame(data_impute[, 1 : 4])
names(data_impute) <- c("interval", "day", "steps", "date")
data_impute$steps <- round(data_impute$steps, digits = 0)
data_impute <- data_impute[order(data_impute$date,
data_impute$interval), ]
impute_steps_per_day <- aggregate(steps ~ date, data_impute,
sum, na.rm = T)
hist(impute_steps_per_day[, "steps"], xlab = "Steps", main = "Histogram of Steps per Day")
mean(impute_steps_per_day[, "steps"])
median(impute_steps_per_day[, "steps"])
sum(is.na(data))
data_sep <- aggregate(steps ~ (interval + day), data, mean, na.rm = T)
data_impute <- merge(data, data_sep, by = c("interval", "day"))
data_impute <- transform(data_impute,
steps.x = ifelse(is.na(steps.x),
steps.y, steps.x))
data_impute <- data.frame(data_impute[, 1 : 4])
names(data_impute) <- c("interval", "day", "steps", "date")
data_impute$steps <- round(data_impute$steps, digits = 0)
data_impute <- data_impute[order(data_impute$date,
data_impute$interval), ]
impute_steps_per_day <- aggregate(steps ~ date, data_impute,
sum, na.rm = T)
hist(impute_steps_per_day[, "steps"], xlab = "Steps", main = "Histogram of Steps per Day")
mean(impute_steps_per_day[, "steps"])
median(impute_steps_per_day[, "steps"])
sum(is.na(data))
data$day <- weekdays(data$date)
data_sep <- aggregate(steps ~ (interval + day), data, mean, na.rm = T)
data_impute <- merge(data, data_sep, by = c("interval", "day"))
data_impute <- transform(data_impute,
steps.x = ifelse(is.na(steps.x),
steps.y, steps.x))
data_impute <- data.frame(data_impute[, 1 : 4])
names(data_impute) <- c("interval", "day", "steps", "date")
data_impute$steps <- round(data_impute$steps, digits = 0)
data_impute <- data_impute[order(data_impute$date,
data_impute$interval), ]
impute_steps_per_day <- aggregate(steps ~ date, data_impute,
sum, na.rm = T)
hist(impute_steps_per_day[, "steps"], xlab = "Steps", main = "Histogram of Steps per Day")
mean(impute_steps_per_day[, "steps"])
median(impute_steps_per_day[, "steps"])
data <- read.csv("activity.csv")
steps_per_day <- aggregate(steps ~ date, data, sum)
hist(steps_per_day[, "steps"], xlab = "Steps", main = "Histogram of Steps per Day")
mean(steps_per_day[, "steps"])
median(steps_per_day[, "steps"])
steps_avg_interval <- aggregate(steps ~ interval, data, mean)
plot(steps_avg_interval[, "interval"], steps_avg_interval[, "steps"],
type = "l",
main = "average daily activity pattern",
xlab = "Interval",
ylab = "Steps")
idx <- which.max(steps_avg_interval[, "steps"])
steps_avg_interval[idx, "interval"]
sum(is.na(data))
data$day <- weekdays(data$date)
data_sep <- aggregate(steps ~ (interval + day), data, mean, na.rm = T)
data_impute <- merge(data, data_sep, by = c("interval", "day"))
data_impute <- transform(data_impute,
steps.x = ifelse(is.na(steps.x),
steps.y, steps.x))
data_impute <- data.frame(data_impute[, 1 : 4])
names(data_impute) <- c("interval", "day", "steps", "date")
data_impute$steps <- round(data_impute$steps, digits = 0)
data_impute <- data_impute[order(data_impute$date,
data_impute$interval), ]
impute_steps_per_day <- aggregate(steps ~ date, data_impute,
sum, na.rm = T)
hist(impute_steps_per_day[, "steps"], xlab = "Steps", main = "Histogram of Steps per Day")
mean(impute_steps_per_day[, "steps"])
median(impute_steps_per_day[, "steps"])
names(data)
library(weekdays)
install.packages("weekdays")
data$day <- weekdays(data$date)
data$date <- as.Date(data$date)
data$day <- weekdays(data$date)
names(data)
data[1,4]
sum(is.na(data))
data$date <- as.Date(data$date)
data$day <- weekdays(data$date)
data_sep <- aggregate(steps ~ (interval + day), data, mean, na.rm = T)
data_impute <- merge(data, data_sep, by = c("interval", "day"))
data_impute <- transform(data_impute,
steps.x = ifelse(is.na(steps.x),
steps.y, steps.x))
data_impute <- data.frame(data_impute[, 1 : 4])
names(data_impute) <- c("interval", "day", "steps", "date")
data_impute$steps <- round(data_impute$steps, digits = 0)
data_impute <- data_impute[order(data_impute$date,
data_impute$interval), ]
impute_steps_per_day <- aggregate(steps ~ date, data_impute,
sum, na.rm = T)
hist(impute_steps_per_day[, "steps"], xlab = "Steps", main = "Histogram of Steps per Day")
mean(impute_steps_per_day[, "steps"])
median(impute_steps_per_day[, "steps"])
steps_per_day <- aggregate(steps ~ date, data, sum)
hist(steps_per_day[, "steps"], xlab = "Steps", main = "Histogram of Steps per Day")
mean(steps_per_day[, "steps"])
median(steps_per_day[, "steps"])
?hist
steps_per_day <- aggregate(steps ~ date, data, sum)
hist(steps_per_day[, "steps"], breaks = 10,
xlab = "Steps", main = "Histogram of Steps per Day")
mean(steps_per_day[, "steps"])
median(steps_per_day[, "steps"])
sum(is.na(data))
data$date <- as.Date(data$date)
data$day <- weekdays(data$date)
data_sep <- aggregate(steps ~ (interval + day), data, mean, na.rm = T)
data_impute <- merge(data, data_sep, by = c("interval", "day"))
data_impute <- transform(data_impute,
steps.x = ifelse(is.na(steps.x),
steps.y, steps.x))
data_impute <- data.frame(data_impute[, 1 : 4])
names(data_impute) <- c("interval", "day", "steps", "date")
data_impute$steps <- round(data_impute$steps, digits = 0)
data_impute <- data_impute[order(data_impute$date,
data_impute$interval), ]
impute_steps_per_day <- aggregate(steps ~ date, data_impute,
sum, na.rm = T)
hist(impute_steps_per_day[, "steps"], breaks = 10,
xlab = "Steps", main = "Histogram of Steps per Day")
mean(impute_steps_per_day[, "steps"])
median(impute_steps_per_day[, "steps"])
steps_per_day <- aggregate(steps ~ date, data, sum)
hist(steps_per_day[, "steps"], breaks = 10,
xlab = "Steps", main = "Histogram of Steps per Day")
mean(steps_per_day[, "steps"])
median(steps_per_day[, "steps"])
sum(is.na(data))
data$date <- as.Date(data$date)
data$day <- weekdays(data$date)
data_sep <- aggregate(steps ~ (interval + day), data, mean, na.rm = T)
data_impute <- merge(data, data_sep, by = c("interval", "day"))
data_impute <- transform(data_impute,
steps.x = ifelse(is.na(steps.x),
steps.y, steps.x))
data_impute <- data.frame(data_impute[, 1 : 4])
names(data_impute) <- c("interval", "day", "steps", "date")
data_impute$steps <- round(data_impute$steps, digits = 0)
data_impute <- data_impute[order(data_impute$date,
data_impute$interval), ]
impute_steps_per_day <- aggregate(steps ~ date, data_impute,
sum, na.rm = T)
hist(impute_steps_per_day[, "steps"], breaks = 10,
xlab = "Steps", main = "Histogram of Steps per Day")
mean(impute_steps_per_day[, "steps"])
median(impute_steps_per_day[, "steps"])
sum(is.na(data))
data$date <- as.Date(data$date)
data$day <- weekdays(data$date)
data_sep <- aggregate(steps ~ (interval + day), data, mean, na.rm = T)
data_impute <- merge(data, data_sep, by = c("interval", "day"))
data_impute <- transform(data_impute,
steps.x = ifelse(is.na(steps.x),
steps.y, steps.x))
data_impute <- data.frame(data_impute[, 1 : 4])
names(data_impute) <- c("interval", "day", "steps", "date")
data_impute$steps <- round(data_impute$steps, digits = 0)
data_impute <- data_impute[order(data_impute$date,
data_impute$interval), ]
impute_steps_per_day <- aggregate(steps ~ date, data_impute,
sum, na.rm = T)
hist(impute_steps_per_day[, "steps"], breaks = 8,
xlab = "Steps", main = "Histogram of Steps per Day")
mean(impute_steps_per_day[, "steps"])
median(impute_steps_per_day[, "steps"])
sum(is.na(data))
data$date <- as.Date(data$date)
data$day <- weekdays(data$date)
data_sep <- aggregate(steps ~ (interval + day), data, mean, na.rm = T)
data_impute <- merge(data, data_sep, by = c("interval", "day"))
data_impute <- transform(data_impute,
steps.x = ifelse(is.na(steps.x),
steps.y, steps.x))
data_impute <- data.frame(data_impute[, 1 : 4])
names(data_impute) <- c("interval", "day", "steps", "date")
data_impute$steps <- round(data_impute$steps, digits = 0)
data_impute <- data_impute[order(data_impute$date,
data_impute$interval), ]
impute_steps_per_day <- aggregate(steps ~ date, data_impute,
sum, na.rm = T)
hist(impute_steps_per_day[, "steps"], breaks = 16,
xlab = "Steps", main = "Histogram of Steps per Day")
mean(impute_steps_per_day[, "steps"])
median(impute_steps_per_day[, "steps"])
sum(is.na(data))
data$date <- as.Date(data$date)
data$day <- weekdays(data$date)
data_sep <- aggregate(steps ~ (interval + day), data, mean, na.rm = T)
data_impute <- merge(data, data_sep, by = c("interval", "day"))
data_impute <- transform(data_impute,
steps.x = ifelse(is.na(steps.x),
steps.y, steps.x))
data_impute <- data.frame(data_impute[, 1 : 4])
names(data_impute) <- c("interval", "day", "steps", "date")
data_impute$steps <- round(data_impute$steps, digits = 0)
data_impute <- data_impute[order(data_impute$date,
data_impute$interval), ]
impute_steps_per_day <- aggregate(steps ~ date, data_impute,
sum, na.rm = T)
hist(impute_steps_per_day[, "steps"], breaks = 12,
xlab = "Steps", main = "Histogram of Steps per Day")
mean(impute_steps_per_day[, "steps"])
median(impute_steps_per_day[, "steps"])
steps_per_day <- aggregate(steps ~ date, data, sum)
hist(steps_per_day[, "steps"], breaks = 12,
xlab = "Steps", main = "Histogram of Steps per Day")
mean(steps_per_day[, "steps"])
median(steps_per_day[, "steps"])
sum(is.na(data))
data$date <- as.Date(data$date)
data$day <- weekdays(data$date)
data_sep <- aggregate(steps ~ (interval + day), data, mean, na.rm = T)
data_impute <- merge(data, data_sep, by = c("interval", "day"))
data_impute <- transform(data_impute,
steps.x = ifelse(is.na(steps.x),
steps.y, steps.x))
data_impute <- data.frame(data_impute[, 1 : 4])
names(data_impute) <- c("interval", "day", "steps", "date")
data_impute$steps <- round(data_impute$steps, digits = 0)
data_impute <- data_impute[order(data_impute$date,
data_impute$interval), ]
impute_steps_per_day <- aggregate(steps ~ date, data_impute,
sum, na.rm = T)
hist(impute_steps_per_day[, "steps"], breaks = 12,
xlab = "Steps", main = "Histogram of Steps per Day")
mean(impute_steps_per_day[, "steps"])
median(impute_steps_per_day[, "steps"])
data_impute$type <- ifelse(data_impute$day %in% c("Saturday", "Sunday"),
"Weekend", "Weekday")
data_impute_per_itvtype <- aggregate(steps ~ (interval + type),
data_impute, mean, na.rm = T)
ggplot(data_impute_per_itvtype, aes(x = interval, y = steps)) +
geom_line(color="blue") +
facet_wrap(~type, nrow = 2, ncol = 1) +
labs(x = "Interval",y = "Steps")
